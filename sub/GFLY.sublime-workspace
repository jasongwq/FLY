{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sp",
				"sprintf"
			],
			[
				"de",
				"def	#ifndef … #define … #endif"
			],
			[
				"vo",
				"Voltage_Values"
			],
			[
				"le",
				"led_t"
			],
			[
				"led",
				"led_state"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include  \"systemInit.h\"\n\n\n//  定义全局的系统时钟变量\nunsigned long TheSysClock = 12000000UL;\n\n\n//  定义KEY\n#define  KEY_PERIPH             SYSCTL_PERIPH_GPIOB\n#define  KEY_PORT               GPIO_PORTB_BASE\n#define  KEY_PIN                GPIO_PIN_5\n\n\n//  防止JTAG失效\nvoid jtagWait(void)\n{\n    SysCtlPeriEnable(KEY_PERIPH);                           //  使能KEY所在的GPIO端口\n    GPIOPinTypeIn(KEY_PORT, KEY_PIN);                       //  设置KEY所在管脚为输入\n\n    if (GPIOPinRead(KEY_PORT, KEY_PIN) == 0x00)             //  若复位时按下KEY，则进入\n    {\n        for (;;);                                           //  死循环，以等待JTAG连接\n    }\n\n    SysCtlPeriDisable(KEY_PERIPH);                          //  禁止KEY所在的GPIO端口\n}\n\n\n//  系统时钟初始化\nvoid clockInit(void)\n{\n/*\n    SysCtlLDOSet(SYSCTL_LDO_2_50V);                         //  设置LDO输出电压\n\n    SysCtlClockSet(SYSCTL_USE_OSC |                         //  系统时钟设置\n                   SYSCTL_OSC_MAIN |                        //  采用主振荡器\n                   SYSCTL_XTAL_6MHZ |                       //  外接6MHz晶振\n                   SYSCTL_SYSDIV_1);                        //  不分频\n*/\n    SysCtlLDOSet(SYSCTL_LDO_2_75V);                         //  配置PLL前须将LDO设为2.75V\n\n    SysCtlClockSet(SYSCTL_USE_PLL |                         //  系统时钟设置，采用PLL\n                   SYSCTL_OSC_MAIN |                        //  主振荡器\n                   SYSCTL_XTAL_6MHZ |                       //  外接6MHz晶振\n                   SYSCTL_SYSDIV_4);                       //  分频结果为50MHz\n\n    TheSysClock = SysCtlClockGet();                         //  获取当前的系统时钟频率\n}\n\n",
			"file": "/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波/systemInit.c",
			"file_size": 1851,
			"file_write_time": 130583312191820844,
			"settings":
			{
				"buffer_size": 1540,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"contents": "#include  \"systemInit.h\"\n\n\n#define   UART_PERIPH       SYSCTL_PERIPH_UART0\n#define   UART_USE_BASE     UART0_BASE\n#define   GPIO_PERIPH       SYSCTL_PERIPH_GPIOA\n#define   GPIO_USE_BASE     GPIO_PORTA_BASE\n#define   GPIO_PINS         GPIO_PIN_0|GPIO_PIN_1\n#define   BAUDRATE          19200\n\n\n//============================================================================//\n//==                          UART初始化函数                                ==//\n//============================================================================//\n//==入口参数: 无                                                            ==//\n//==出口参数: 无                                                            ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid UARTInit(void)\n{\n  SysCtlPeripheralEnable(GPIO_PERIPH);        //使能UART所在GPIO端口\n  SysCtlPeripheralEnable(UART_PERIPH);        //使能UART外设\n  GPIOPinTypeUART(GPIO_USE_BASE, GPIO_PINS);  //使能UART所在引脚\n  \n  UARTConfigSet(UART_USE_BASE, BAUDRATE, UART_CONFIG_WLEN_8|\n                                         UART_CONFIG_STOP_ONE|\n                                         UART_CONFIG_PAR_NONE);\n  UARTEnable(UART_USE_BASE);                  //使能UART\n}\n\n\n\n\n\n//============================================================================//\n//==                          长整型转换函数                                ==//\n//============================================================================//\n//==入口参数: LongNum		指定的长整型                                ==//\n//==	      *pArray		指向保存转换后的数据(四字节)                ==//\n//==出口参数: *pArray		指向保存转换后的数据(四字节)                ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid Long2Char(unsigned long longNum, unsigned char *pArray)\n{\n  unsigned char *pChar=NULL;\n  unsigned char i=0;\n  \n  pChar = (unsigned char*)(&longNum);\n  for (i=0; i<sizeof(long); i++)\n  {\n    *pArray++ = *pChar++;\n  }\n}\n\n\n\n\n\n//============================================================================//\n//==                          长整型数发送函数                              ==//\n//============================================================================//\n//==入口参数: *LArray         指向需要发送的长整型数数组                    ==//\n//==          Num             长整型数据个数                                ==//\n//==出口参数: 无                                                            ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid LongSend(unsigned long *LArray, unsigned int Num)\n{\n  unsigned int i;\n  unsigned char a[4] = {0};\n  \n  \n  for (i=0; i<Num; i++)\n  {\n    Long2Char(LArray[i], a);\n    UARTCharPut(UART_USE_BASE, a[0]);   //低字节放在低地址,先发送低字节\n    UARTCharPut(UART_USE_BASE, a[1]);\n    UARTCharPut(UART_USE_BASE, a[2]);\n    UARTCharPut(UART_USE_BASE, a[3]);\n  }\n}\n\n\n\n\n\n//============================================================================//\n//==                            整型转换函数                                ==//\n//============================================================================//\n//==入口参数: ShortNum		指定的整型                                  ==//\n//==	      *pArray		指向保存转换后的数据(四字节)                ==//\n//==出口参数: *pArray		指向保存转换后的数据(四字节)                ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid Short2Char(unsigned short ShortNum, unsigned char *pArray)\n{\n  unsigned char *pChar=NULL;\n  unsigned char i=0;\n  \n  pChar = (unsigned char*)(&ShortNum);\n  for (i=0; i<sizeof(short); i++)\n  {\n    *pArray++ = *pChar++;\n  }\n}\n\n\n\n\n\n//============================================================================//\n//==                            整型数发送函数                              ==//\n//============================================================================//\n//==入口参数: *SArray         指向需要发送的整型数数组                      ==//\n//==          Num             整型数据个数                                  ==//\n//==出口参数: 无                                                            ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid ShortSend(unsigned short *SArray, unsigned int Num)\n{\n  unsigned int i;\n  unsigned char a[2] = {0};\n  \n  \n  for (i=0; i<Num; i++)\n  {\n    Short2Char(SArray[i], a);\n    UARTCharPut(UART_USE_BASE, a[0]);   //低字节放在低地址,先发送低字节\n    UARTCharPut(UART_USE_BASE, a[1]);\n  }\n}\n\n\n\n\n\n//============================================================================//\n//==                           浮点数转换函数                               ==//\n//============================================================================//\n//==入口参数: FloatNum		指定的浮点数                                ==//\n//==	      *pArray		指向保存转换后的数据(四字节)                ==//\n//==出口参数: *pArray		指向保存转换后的数据(四字节)                ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid Float2Char(float FloatNum, unsigned char *pArray)\n{\n  unsigned char *pChar=NULL;\n  unsigned char i=0;\n  \n  pChar = (unsigned char*)(&FloatNum);\n  for (i=0; i<sizeof(float); i++)\n  {\n    *pArray++ = *pChar++;\n  }\n}\n\n\n\n\n\n//============================================================================//\n//==                           浮点数发送函数                               ==//\n//============================================================================//\n//==入口参数: *Farray		指向需要发送的浮点数数组                    ==//\n//==	      Num		浮点数个数				    ==//\n//==出口参数: 无                                                            ==//\n//==返回值:   无                                                            ==//\n//============================================================================//\nvoid FloatSend(float *FArray, unsigned int Num)\n{\n  unsigned int i;\n  unsigned char a[4] = {0};\n  \n  \n  for (i=0; i<Num; i++)\n  {\n    Float2Char(FArray[i], a);\n    UARTCharPut(UART_USE_BASE, a[0]);\n    UARTCharPut(UART_USE_BASE, a[1]);\n    UARTCharPut(UART_USE_BASE, a[2]);\n    UARTCharPut(UART_USE_BASE, a[3]);\n  }\n}\n\n\nfloat Watch1[N] = {0};\nfloat Watch2[N] = {0};\nfloat Watch3[N] = {0};\nfloat Watch4[N] = {0};\n\n\n//  主函数（程序入口）\nint main(void)\n{\n    unsigned long ulStart = 0;\n    unsigned long ulStop  = 0;\n    unsigned long ulInterval = 0;\n    \n    jtagWait();                                             //  防止JTAG失效，重要！\n    clockInit();                                            //  时钟初始化：晶振，6MHz\n    UARTInit();\n    srand(SEED);                                            //  模拟噪声\n    \n    \n    \n    TimerLoadSet(TIMER0_BASE, TIMER_A, TheSysClock);        // 设置Timer初值，定时1s\n    TimerEnable(TIMER0_BASE, TIMER_A);                      // 使能Timer计数\n    ulStart = TimerValueGet(TIMER0_BASE, TIMER_A);\n    KalMan();\n    ulStop  = TimerValueGet(TIMER0_BASE, TIMER_A);\n    ulInterval = (ulStart-ulStop) / 50;                     // 计算时间间隔(单位us)\n    \n    \n    \n    FloatSend(Watch1, N);\n    FloatSend(Watch2, N);\n    FloatSend(Watch3, N);\n    FloatSend(Watch4, N);\n    \n    \n    for (;;)\n    {\n    }\n}\n",
			"file": "/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波_多传感器融合模拟/main.c",
			"file_size": 8372,
			"file_write_time": 130583312191950906,
			"settings":
			{
				"buffer_size": 7386,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Control.c",
			"settings":
			{
				"buffer_size": 1537,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"inp",
				"Package Control: Install Package"
			],
			[
				"inpack",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/CONFIG",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB"
	],
	"file_history":
	[
		"/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波2/kalman.c",
		"/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波_多传感器融合模拟/main.c",
		"/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波/main.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Balance.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/loop_fast.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Balance.c",
		"/E/WORK/Contest/BOOTCAMP2014/WIRELESS_USART/USER_STM32F0_WIRELESS_USART/USER/main.c",
		"/E/WORK/Contest/BOOTCAMP2014/WIRELESS_USART/USER_STM32F0_WIRELESS_USART/USER/TASK/task_led.h",
		"/C/temp/RTT.log",
		"/E/WORK/Project_List/READC/Kalman_Fliter/main.c",
		"/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波/kalman.c",
		"/D/temp/rtt.log",
		"/E/WORK/Contest/BOOTCAMP2014/WIRELESS_USART/STM32-M0_LIB/RTT_Implementation_140806/Examples/RTT_PrintfTestApp.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Control.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/FATFS/exfuns/fattester.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/TEXT/fontupd.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/FATFS/src/ff.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/STM32F10x_StdPeriph_Driver/inc/stm32f10x_fsmc.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/PERIPHERAL/BMP085/bmp085.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/bak.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/HARDWARE/bkp.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/CONFIG/DS18B20_Config.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/main.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/task_cap_rc.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/task_bmp085.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Control.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/task_hmc5883l.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/task_pwm_ex.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/CONFIG/Usart_Config.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/TASK/task_ultrasonic.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/bak.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/HARDWARE/can.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/HARDWARE/temp.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/GLIB/PERIPHERAL/HMC5883L.7z",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/timer.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/lib/stm32f10x_adc.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/lib/startup_stm32f10x_md.s",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/pro/project.plg",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/data_transfer.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/main.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/OPENPILOT/OpenPilot/flight/targets/boards/coptercontrol/firmware/coptercontrol.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/OPENPILOT/OpenPilot/flight/targets/boards/coptercontrol/firmware/pios_board.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/OPENPILOT/OpenPilot/flight/targets/boards/coptercontrol/firmware/pios_board_posix.c",
		"/E/WORK/Contest/ELECTRONIC_DESIGN_CONTEST2014/MSP430_EX/USER/APP/Control.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/getbuildnum.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/adc.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/run.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/config.c",
		"/D/SkyDrive/Program Files/Sublime Text Build 3059 x64/Data/Packages/User/Preferences.sublime-settings",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/adc.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/ESC32/ESC32_KILE/esc32_keil/src/adc",
		"/J/DATFILE.DAT",
		"/J/20140415.DAT",
		"/J/20140920.DAT",
		"/E/WORK/Project_List/新苗计划/智能联网太阳方位跟踪系统/CODE/GLIB/HARDWARE/gpio.h",
		"/E/WORK/Project_List/新苗计划/智能联网太阳方位跟踪系统/CODE/USER0/USER/main.c",
		"/E/WORK/Project_List/新苗计划/智能联网太阳方位跟踪系统/CODE/GLIB/SYSTEM/sys_usart.c",
		"/E/WORK/Project_List/新苗计划/智能联网太阳方位跟踪系统/CODE/USER0/USER/APP/data_transfer.c",
		"/J/20140416.DAT",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/main.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/maple/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_FLYMAPLE/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/stm32f1/wirish_digital.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/support/scripts/win-list-com-ports.py",
		"/E/WORK/Contest/BOOTCAMP2014/STM32F1 - 副本/USER1_Steering_Head/USER/main.c",
		"/E/WORK/Contest/BOOTCAMP2014/STM32F1 - 副本/USER1_Steering_Head/USER/APP/data_transfer.c",
		"/E/WORK/Contest/BOOTCAMP2014/STM32F0_WIRELESS_USART/USER_STM32F0_WIRELESS_USART/USER/User.h",
		"/E/WORK/Contest/BOOTCAMP2014/STM32F1/GLIB/HARDWARE/adc.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/libmaple/timer.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/libmaple/stm32f1/gpio.c",
		"/E/Users/JASON_G/Desktop/1.py",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/maple-bootloader/dfu.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/DataFlash/DataFlash_APM1.cpp",
		"/E/Users/JASON_G/Desktop/ujgu.bin",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/maple_mini/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/maple_native/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/maple_RET6/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/olimex_stm32_h103/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/st_stm3220g_eval/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/VLDiscovery/include/board/board.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/stm32f2/wirish_digital.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/include/wirish/io.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_VRBRAIN/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_PX4/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Linux/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Empty/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_AVR/GPIO.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/libraries/Wire/WireBase.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/HardwareSerial.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/HardwareSPI.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/usb_serial.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/libraries/Wire/Wire.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/libraries/LiquidCrystal/LiquidCrystal.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/trie_policy/string_trie_e_access_traits_imp.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/pat_trie_/internal_node.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/ext/rope",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/arm/arm-none-eabi/include/c++/4.4.1/initializer_list",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_VRBRAIN/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_PX4/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Linux/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Linux/I2CDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_FLYMAPLE/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_FLYMAPLE/I2CDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Empty/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_Empty/I2CDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_AVR_SITL/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_AVR/UARTDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/libraries/AP_HAL_AVR/I2CDriver.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/commands_logic.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/control_auto.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/control_land.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/Attitude.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/ArduCopter.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/APM_Config.h",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/AP_State.pde",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/ardupilot/ArduCopter/config.h",
		"/E/Users/JASON_G/Desktop/.c",
		"/E/Users/JASON_G/Desktop/SI446x_模块资料/E10-系列产品资料包 - 140718/2、DEMO程序/1、基于STM8L101的SI446X范例/SI446x_demo/RX/main.c",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/maple_RET6/board.cpp",
		"/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/APM/GIT/libmaple/wirish/boards/VLDiscovery/board.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\ArduCopter",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\maple-bootloader",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\libraries\\AP_Notify",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\libraries",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\ArduCopter",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\libmaple",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\maple-bootloader",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\libraries\\AP_Compass",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot\\libraries\\AC_PID",
			"E:\\WORK\\Project_List\\MULTI_ROTOR_TYPE_AIRCRAFT\\APM\\GIT\\ardupilot",
			"E:\\WORK\\Contest\\BOOTCAMP2014\\STM32F1"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MAIN_C",
			"i",
			"Throttle_OUT",
			"PID_YAW",
			"PID_ALT",
			"TIM",
			"3000",
			"INTEGRAL_WINDUP_P",
			"Throttle2",
			"CONTROL",
			"//?????????",
			" //???????????",
			" //???????",
			");\n",
			"//??",
			"//??????",
			" //???????",
			" //?????????",
			" //???????????",
			"(Send_",
			" Send_",
			"Send_",
			", Send_",
			", ",
			"{",
			", Send_",
			"SEND_angle",
			"SERVO_MODE",
			"periodMicros",
			"raw",
			"adcRawData",
			"ADC2",
			"ADC1",
			"DMA_PeripheralBaseAddr",
			"DMA_MemoryBaseAddr",
			"adcRawData",
			"raw",
			"ADC_VOLTS_PRECISION",
			"adcAvgAmps",
			"DMA",
			"\n    }",
			"{\n",
			"\n\n\n",
			"\n\n",
			"#ifdef ADC_FAST_SAMPLE",
			"ADC_FAST_SAMPLE",
			"ADC_InitStructure",
			"ADC_FLAG_JEOC",
			"DATA_TRANSFER_USARTx",
			"USART3",
			"USART",
			"Angle_Offset",
			"USART_DATA",
			"TxBuffer",
			"buf",
			"Print",
			"OUT ",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"PF0_OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT",
			"Out",
			"OUT"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"(Send.",
			"Send.",
			"}",
			"{",
			"\n\n",
			"\n",
			"",
			"#if 1 \n//#ifdef ADC_FAST_SAMPLE",
			"#if 1",
			"0",
			"File_DATA",
			"LED.Key_value",
			"LED.mode",
			"LED.state",
			"TxRxBuf",
			"_L",
			"_H",
			"SCK_L",
			"SCK_H",
			"<=",
			">=",
			"Set_y",
			"Set_x",
			"Circle_R",
			"result4.",
			"SPI",
			"SPI1",
			"USARTx",
			"Resu->"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波/systemInit.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1540,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"in_converting": true,
							"incomplete_sync": null,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"sublime_auto_complete": true,
							"synced": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/E/WORK/Project_List/READC/Kalman_Fliter/卡尔曼滤波_多传感器融合模拟/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7386,
						"regions":
						{
						},
						"selection":
						[
							[
								1288,
								292
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"in_converting": true,
							"incomplete_sync": null,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"sublime_auto_complete": true,
							"synced": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "/E/WORK/Project_List/MULTI_ROTOR_TYPE_AIRCRAFT/GFLY/FLY/USER/APP/Control.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1537,
						"regions":
						{
						},
						"selection":
						[
							[
								1532,
								1532
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"incomplete_sync": null,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"sublime_auto_complete": true,
							"synced": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 165.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 242.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"project": "GFLY.sublime-project",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"fas",
				"FLY\\USER\\TASK\\loop_fast.h"
			],
			[
				"con",
				"FLY\\USER\\APP\\Control.c"
			],
			[
				"b.c",
				"FLY\\USER\\APP\\Balance.c"
			],
			[
				"b",
				"FLY\\USER\\APP\\Balance.h"
			],
			[
				"balance",
				"FLY\\USER\\APP\\Balance.h"
			],
			[
				"thmc",
				"FLY\\USER\\TASK\\task_hmc5883l.h"
			],
			[
				"main",
				"FLY\\USER\\main.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"D:\\SkyDrive\\文档\\sub\\430_EX.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
